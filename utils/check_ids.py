#!/usr/bin/env python3
import asyncio
from app.db.database import database


async def check_ids():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ ID –≤ –±–∞–∑–µ"""
    await database.init_db()

    print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ ID –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")

    # –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
    teachers = await database.fetch_all("SELECT id, name FROM teachers ORDER BY id")
    print(f"\nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ ({len(teachers)}):")
    for teacher in teachers:
        print(f"  ID {teacher[0]}: {teacher[1]}")

    # –ü—Ä–µ–¥–º–µ—Ç—ã
    subjects = await database.fetch_all("SELECT id, teacher, subject_name FROM subjects ORDER BY id")
    print(f"\nüìö –ü—Ä–µ–¥–º–µ—Ç—ã ({len(subjects)}):")
    for subject in subjects:
        print(f"  ID {subject[0]}: {subject[1]} - {subject[2]}")

    # –£—Ä–æ–∫–∏
    lessons = await database.fetch_all("SELECT id, day, time_slot, teacher, subject_name FROM lessons ORDER BY id")
    print(f"\nüìÖ –£—Ä–æ–∫–∏ ({len(lessons)}):")
    for lesson in lessons:
        print(f"  ID {lesson[0]}: –î–µ–Ω—å {lesson[1]}, –ü–∞—Ä–∞ {lesson[2]}, {lesson[3]} - {lesson[4]}")


if __name__ == "__main__":
    asyncio.run(check_ids())